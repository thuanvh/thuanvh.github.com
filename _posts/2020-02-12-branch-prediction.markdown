---
layout: post
title: Branch Prediction
date: 2020-02-12 06:20:31.000000000 +07:00
type: post
parent_id: '0'
published: true
password: ''
status: publish
categories: []

permalink: "/2020/02/12/branch-prediction/"
---

It is a great day when I read an interesting post in Stackoverflow about branch prediction.

It is an interesting question and answer.

<https://stackoverflow.com/questions/11227809/why-is-processing-a-sorted-array-faster-than-processing-an-unsorted-array?r=SearchResults>

The author find a difference in time performance of a loop with a condition inside.<br />
The loop run faster with a sorted array. The loop run a lot slower with unsorted array.

So the key is if-then-else condition in it. Because with a sorted array, most of the first haft part not run into if condition, the second part run into else condition. So with the instructions generated by compiler, it runs smoothly.

But with an unsorted array, it not runs smoothly because it must switch in if/else condition.

So I think the optimization is very interesting in this case. We could optimize it by rewrite the if/else condition into single sentence.

Summary:

* Limit of conditional instruction.
* Rewrite conditional may cause a difficulty in understanding code.

